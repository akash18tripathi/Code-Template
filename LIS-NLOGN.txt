https://leetcode.com/problems/longest-increasing-subsequence/description/


//Video : https://www.youtube.com/watch?v=on2hvxBXJH4

Given an integer array nums, return the length of the longest strictly increasing 
subsequence
.

 

Example 1:

Input: nums = [10,9,2,5,3,7,101,18]
Output: 4
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.



class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<int> lis;
        for(int i=0;i<n;i++){
            int index = lower_bound(lis.begin(),lis.end(),nums[i])-lis.begin();
            if(index>=lis.size()){
                lis.push_back(nums[i]);
            }else{
                lis[index]=nums[i];
            }
        }
        return lis.size();
    }
};
